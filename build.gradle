import javax.tools.JavaCompiler

group 'org.spring.boot.base'
version '1.0'

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.5.RELEASE")
    }
}
tasks.withType(JavaCompiler){
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}
repositories {
    jcenter()
    mavenCentral()
}
defaultTasks 'clean', 'jar'
configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
    deployerJars
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.6'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    compile group: 'com.google.guava', name: 'guava', version: '18.0'
    compile group: 'com.google.zxing', name: 'core', version: '3.2.1'
    compile group: 'commons-io', name: 'commons-io', version: '2.5'
    compile group: 'org.aspectj', name: 'aspectjrt', version: '1.8.9'
    compile group: 'org.aspectj', name: 'aspectjweaver', version: '1.8.9'
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.15'
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.38'
    compile group: 'org.springframework', name: 'spring-context-support', version: '4.3.2.RELEASE'
    //compile group: 'com.alibaba', name: 'druid', version: '1.0.26'
    //compile group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-activemq'
    //compile group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '1.3.0'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-undertow', version: '1.5.5.RELEASE'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-config', version: '1.3.2.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '1.5.5.RELEASE'
    //compile group: 'org.springframework.cloud', name: 'spring-cloud-config-server', version: '1.3.2.RELEASE'

    compile 'io.springfox:springfox-swagger-ui:2.4.0'
    compile 'io.springfox:springfox-swagger2:2.4.0'
    compile 'io.springfox:springfox-bean-validators:2.4.0'
    compile group: 'org.bouncycastle', name: 'bcprov-jdk16', version: '1.45'

    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
    compile group: 'org.quartz-scheduler', name:'quartz', version:'2.2.2'
    compile group: 'com.aliyun.oss', name: 'aliyun-sdk-oss', version: '2.2.3'
    compile ('org.apache.zookeeper:zookeeper:3.4.6'){
        exclude group:'org.slf4j'
        exclude group:'log4j'
    }

    compile fileTree (dir:'/mnt/libs/other_lib',include:['*.jar'])
    compile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile 'org.codehaus.groovy:groovy-all:2.4.6'
    testCompile 'org.springframework.boot:spring-boot-starter-test'

}

jar {
    exclude 'application.properties'
    exclude 'logback.groovy'
    exclude 'database.sql'

    manifest {
        attributes 'Build-Date': new Date().format("yyyy-MM-dd HH:mm:ssZ"),
                'Built-By': System.getProperty('user.name'),
                'Built-JDK': System.getProperty('java.version'),
                'Built-OS': "${System.getProperty('os.name')}/${System.getProperty('os.version')}",
                'Source-Compatibility': sourceCompatibility,
                'Target-Compatibility': targetCompatibility,
                'Rev-Revision': version,
                'Git-Revision': 'git rev-parse HEAD'.execute().text.trim(),
                'Git-Branch': 'git rev-parse --abbrev-ref HEAD'.execute().text.trim()
    }

}

tasks.create(name: 'versionTag') << {
new File("${buildDir}/dist/classes/version.me").text = """Build-Date:${new Date().format("yyyy-MM-dd HH:mm:ss")}
Built-By:${System.getProperty('user.name')}
Built-JDK:${System.getProperty('java.version')}
Built-OS:${System.getProperty('os.name')}/${System.getProperty('os.version')}
Source-Compatibility:${sourceCompatibility}
Target-Compatibility:${targetCompatibility}
Rev-Revision:${version}
Git-Revision:${'git rev-parse HEAD'.execute().text.trim()}
Git-Branch:${'git rev-parse --abbrev-ref HEAD'.execute().text.trim()}
"""
}
tasks.create(name:'life') << {
    println("run life, hello...")
}
versionTag.dependsOn("life")

//sourceSets {
//    main {
//        groovy {
//            srcDir 'src/main/groovy'
//        }
//    }
//}
task dist(dependsOn: [jar,versionTag]) {
    jar.doFirst {
        println("start create jar...")
    }
    jar.doLast {
        delete {
            "$buildDir/dist"
        }
        copy {
            from "$buildDir/libs"
            from configurations.runtime
            from System.properties.getProperty('java.home') + "/lib/ext/sunjce_provider.jar"
            into "$buildDir/dist/lib"
        }
        copy {
            from 'src/main/resources'
            exclude 'template_parse_config'
            into "$buildDir/dist/classes"
        }
        copy {
            from 'server'
            into "$buildDir/dist"
        }
    }
    jar.doLast {
        println("create jar finished.")
    }
    versionTag.doLast {
        println("create version.me success!")
    }
}
